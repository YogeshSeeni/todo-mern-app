{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\Documents\\\\Projects\\\\mern-todo-app\\\\todo-frontend\\\\src\\\\components\\\\Todo.js\";\nimport React from \"react\";\nimport { deleteTodo } from \"../APIFunctions\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  completion,\n  body,\n  id\n}) {\n  const cookies = new Cookies();\n\n  const handleDelete = async () => {\n    const res = await deleteTodo(cookies.get(\"token\"), id);\n\n    if ((await res) == true) {\n      window.location.reload();\n    } else {\n      alert(\"Could not delete this todo\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"list-group-item\",\n    children: [body, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger deletetodo\",\n      onClick: handleDelete,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"fas fa-trash\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-light edittodo\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"fas fa-pencil-alt\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/yoges/Documents/Projects/mern-todo-app/todo-frontend/src/components/Todo.js"],"names":["React","deleteTodo","Cookies","Todo","completion","body","id","cookies","handleDelete","res","get","window","location","reload","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAd,EAAwC;AACrD,QAAMC,OAAO,GAAG,IAAIL,OAAJ,EAAhB;;AAEA,QAAMM,YAAY,GAAG,YAAY;AAC/B,UAAMC,GAAG,GAAG,MAAMR,UAAU,CAACM,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAD,EAAuBJ,EAAvB,CAA5B;;AACA,QAAI,CAAC,MAAMG,GAAP,KAAe,IAAnB,EAAyB;AACvBE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,GAPD;;AASA,sBACE;AAAI,IAAA,KAAK,EAAC,iBAAV;AAAA,eACGT,IADH,eAGE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,2BAFR;AAGE,MAAA,OAAO,EAAEG,YAHX;AAAA,6BAKE;AAAM,QAAA,KAAK,EAAC,cAAZ;AAA2B,uBAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,wBAA5B;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,mBAAZ;AAAgC,uBAAY;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KA5BuBL,I","sourcesContent":["import React from \"react\";\r\nimport { deleteTodo } from \"../APIFunctions\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nexport default function Todo({ completion, body, id }) {\r\n  const cookies = new Cookies();\r\n\r\n  const handleDelete = async () => {\r\n    const res = await deleteTodo(cookies.get(\"token\"), id);\r\n    if ((await res) == true) {\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Could not delete this todo\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li class=\"list-group-item\">\r\n      {body}\r\n\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger deletetodo\"\r\n        onClick={handleDelete}\r\n      >\r\n        <span class=\"fas fa-trash\" aria-hidden=\"true\"></span>\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-light edittodo\">\r\n        <span class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></span>\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}