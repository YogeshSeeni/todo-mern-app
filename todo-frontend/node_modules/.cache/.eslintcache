[{"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\index.js":"1","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\App.js":"2","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\ViewTodos.js":"3","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\SignUp.js":"4","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Login.js":"5","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\AddTodo.js":"6","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\APIFunctions.js":"7","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Logout.js":"8","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Todo.js":"9"},{"size":219,"mtime":1627076552911,"results":"10","hashOfConfig":"11"},{"size":2744,"mtime":1627332098910,"results":"12","hashOfConfig":"11"},{"size":1916,"mtime":1627395979215,"results":"13","hashOfConfig":"11"},{"size":2316,"mtime":1627331974037,"results":"14","hashOfConfig":"11"},{"size":2603,"mtime":1627332445009,"results":"15","hashOfConfig":"11"},{"size":2011,"mtime":1627393617707,"results":"16","hashOfConfig":"11"},{"size":2229,"mtime":1627524188452,"results":"17","hashOfConfig":"11"},{"size":349,"mtime":1627332483801,"results":"18","hashOfConfig":"11"},{"size":1441,"mtime":1627524236942,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"zve0ke",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\index.js",[],["44","45"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\App.js",["46","47","48","49"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport ViewTodos from \"./components/ViewTodos\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport AddTodo from \"./components/AddTodo\";\nimport Logout from \"./components/Logout\";\n\nfunction App() {\n  const cookies = new Cookies();\n\n  return (\n    <Router>\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            MERN APP\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            {cookies.get(\"token\") != undefined ? (\n              <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" aria-current=\"page\" href=\"/\">\n                    Todos\n                  </a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/addtodo\">\n                    Add Todos\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n            {cookies.get(\"token\") == undefined ? (\n              <ul class=\"navbar-nav ms-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/login\">\n                    Login\n                  </a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/signup\">\n                    Signup\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n            {cookies.get(\"token\") != undefined ? (\n              <ul class=\"navbar-nav ms-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/logout\">\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n        </div>\n      </nav>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Route path=\"/addtodo\">\n          <AddTodo />\n        </Route>\n        <Route path=\"/\">\n          <ViewTodos />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\ViewTodos.js",["50","51","52","53","54"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { verifyToken, getTodos } from \"../APIFunctions\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function ViewTodos() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [todos, setTodos] = useState([]);\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n  const validation = async () => {\r\n    if (cookies.get(\"token\") == undefined) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if ((await verifyToken(cookies.get(\"token\"))) == false) {\r\n      cookies.remove(\"token\", { path: \"/\" });\r\n      history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    validation();\r\n    const todosTemp = await getTodos(cookies.get(\"token\"));\r\n    setTodos(todosTemp);\r\n    if ((await todos[0]) == false) {\r\n      setErrorMessage(\r\n        \"Sorry, we were not able to retrieve your todos. Try again later.\"\r\n      );\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {errorMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {errorMessage}\r\n        </div>\r\n      ) : null}\r\n      <h1>Hello There,</h1>\r\n      <div class=\"card\">\r\n        {loading ? (\r\n          <h1>Loading</h1>\r\n        ) : (\r\n          <div>\r\n            <div class=\"card-header\">Your Todos:</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              {todos[1].map((data, index) => {\r\n                return (\r\n                  <Todo\r\n                    body={data.body}\r\n                    id={data.id}\r\n                    completion={data.completion}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\SignUp.js",["55","56"],"import React, { useState } from \"react\";\r\nimport { registerUser } from \"../APIFunctions\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SignUp() {\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [failureMessage, setFailureMessage] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n\r\n  if (cookies.get(\"token\") != undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    let response = await registerUser(name, email, password);\r\n    if ((await response) == \"Success\") {\r\n      setFailureMessage(\"\");\r\n      setSuccessMessage(await response);\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setFailureMessage(await response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {successMessage ? (\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      ) : null}\r\n      {failureMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {failureMessage}\r\n        </div>\r\n      ) : null}\r\n      <h2>Sign Up Page</h2>\r\n      <div class=\"form-group\">\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>\r\n          Sign Up!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Login.js",["57","58"],"import React, { useState } from \"react\";\r\nimport { loginUser } from \"../APIFunctions\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [failureMessage, setFailureMessage] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n\r\n  if (cookies.get(\"token\") != undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    const res = await loginUser(email, password);\r\n    const date = new Date();\r\n    if (rememberMe) {\r\n      date.setDate(date.getDate() + 7);\r\n    } else {\r\n      date.setTime(date.getTime() + 30 * 60 * 1000);\r\n    }\r\n    if ((await res[0]) == true) {\r\n      setFailureMessage(\"\");\r\n      setSuccessMessage(\"Logged In\");\r\n      cookies.set(\"token\", res[1], { path: \"/\", expires: date });\r\n      window.location.reload();\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setFailureMessage(await res[1]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {successMessage ? (\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      ) : null}\r\n      {failureMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {failureMessage}\r\n        </div>\r\n      ) : null}\r\n      <h2>Login Page</h2>\r\n      <div class=\"form-group\">\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"form-check-input\"\r\n            checked={rememberMe}\r\n            onChange={() => setRememberMe(!rememberMe)}\r\n          />\r\n          <label class=\"form-check-label\">Remember Me</label>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>\r\n          Login!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\AddTodo.js",["59","60","61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { verifyToken } from \"../APIFunctions\";\r\nimport { addTodo } from \"../APIFunctions\";\r\n\r\nexport default function AddTodo() {\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n  const validation = async () => {\r\n    if (cookies.get(\"token\") == undefined) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if ((await verifyToken(cookies.get(\"token\"))) == false) {\r\n      cookies.remove(\"token\", { path: \"/\" });\r\n      history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validation();\r\n  }, []);\r\n\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [failureMessage, setFailureMessage] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    const res = await addTodo(cookies.get(\"token\"), message);\r\n    if ((await res) == true) {\r\n      setFailureMessage(\"\");\r\n      setSuccessMessage(`Added todo with message: \"${message}\"`);\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setFailureMessage(\"Could not add todo.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {successMessage ? (\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      ) : null}\r\n      {failureMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {failureMessage}\r\n        </div>\r\n      ) : null}\r\n      <div class=\"form-group\">\r\n        <label>Add Todo:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter todo\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>\r\n          Add Todo!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\APIFunctions.js",["63","64","65","66","67"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Logout.js",[],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Todo.js",["68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":17,"column":11,"nodeType":"77","endLine":17,"endColumn":44},{"ruleId":"78","severity":1,"message":"79","line":32,"column":35,"nodeType":"80","messageId":"81","endLine":32,"endColumn":37},{"ruleId":"78","severity":1,"message":"82","line":46,"column":35,"nodeType":"80","messageId":"81","endLine":46,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":60,"column":35,"nodeType":"80","messageId":"81","endLine":60,"endColumn":37},{"ruleId":"78","severity":1,"message":"82","line":13,"column":30,"nodeType":"80","messageId":"81","endLine":13,"endColumn":32},{"ruleId":"78","severity":1,"message":"82","line":17,"column":51,"nodeType":"80","messageId":"81","endLine":17,"endColumn":53},{"ruleId":"83","severity":1,"message":"84","line":24,"column":13,"nodeType":"85","endLine":34,"endColumn":4},{"ruleId":"78","severity":1,"message":"82","line":28,"column":26,"nodeType":"80","messageId":"81","endLine":28,"endColumn":28},{"ruleId":"83","severity":1,"message":"86","line":34,"column":6,"nodeType":"87","endLine":34,"endColumn":8,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"79","line":17,"column":28,"nodeType":"80","messageId":"81","endLine":17,"endColumn":30},{"ruleId":"78","severity":1,"message":"82","line":23,"column":26,"nodeType":"80","messageId":"81","endLine":23,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":17,"column":28,"nodeType":"80","messageId":"81","endLine":17,"endColumn":30},{"ruleId":"78","severity":1,"message":"82","line":29,"column":24,"nodeType":"80","messageId":"81","endLine":29,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":11,"column":30,"nodeType":"80","messageId":"81","endLine":11,"endColumn":32},{"ruleId":"78","severity":1,"message":"82","line":15,"column":51,"nodeType":"80","messageId":"81","endLine":15,"endColumn":53},{"ruleId":"83","severity":1,"message":"89","line":24,"column":6,"nodeType":"87","endLine":24,"endColumn":8,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"82","line":33,"column":21,"nodeType":"80","messageId":"81","endLine":33,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":11,"column":11,"nodeType":"93","messageId":"94","endLine":11,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":36,"column":11,"nodeType":"93","messageId":"94","endLine":36,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":65,"column":11,"nodeType":"93","messageId":"94","endLine":65,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":82,"column":11,"nodeType":"93","messageId":"94","endLine":82,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":101,"column":11,"nodeType":"93","messageId":"94","endLine":101,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":13,"column":42,"nodeType":"80","messageId":"81","endLine":13,"endColumn":44},{"ruleId":"78","severity":1,"message":"82","line":17,"column":23,"nodeType":"80","messageId":"81","endLine":17,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":27,"column":21,"nodeType":"80","messageId":"81","endLine":27,"endColumn":23},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'cookies', 'todos', and 'validation'. Either include them or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'validation'. Either include it or remove the dependency array.",["98"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [cookies, todos, validation]",{"range":"103","text":"104"},"Update the dependencies array to be: [validation]",{"range":"105","text":"106"},[1056,1058],"[cookies, todos, validation]",[696,698],"[validation]"]