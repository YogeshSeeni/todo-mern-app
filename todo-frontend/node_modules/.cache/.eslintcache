[{"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\index.js":"1","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\App.js":"2","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\ViewTodos.js":"3","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\SignUp.js":"4","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Login.js":"5","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\AddTodo.js":"6","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\APIFunctions.js":"7","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Logout.js":"8"},{"size":219,"mtime":1627076552911,"results":"9","hashOfConfig":"10"},{"size":2744,"mtime":1627332098910,"results":"11","hashOfConfig":"10"},{"size":690,"mtime":1627343421184,"results":"12","hashOfConfig":"10"},{"size":2316,"mtime":1627331974037,"results":"13","hashOfConfig":"10"},{"size":2603,"mtime":1627332445009,"results":"14","hashOfConfig":"10"},{"size":691,"mtime":1627343536452,"results":"15","hashOfConfig":"10"},{"size":980,"mtime":1627343063262,"results":"16","hashOfConfig":"10"},{"size":349,"mtime":1627332483801,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zve0ke",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\index.js",[],["38","39"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\App.js",["40","41","42","43"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport ViewTodos from \"./components/ViewTodos\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport AddTodo from \"./components/AddTodo\";\nimport Logout from \"./components/Logout\";\n\nfunction App() {\n  const cookies = new Cookies();\n\n  return (\n    <Router>\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            MERN APP\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            {cookies.get(\"token\") != undefined ? (\n              <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" aria-current=\"page\" href=\"/\">\n                    Todos\n                  </a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/addtodo\">\n                    Add Todos\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n            {cookies.get(\"token\") == undefined ? (\n              <ul class=\"navbar-nav ms-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/login\">\n                    Login\n                  </a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/signup\">\n                    Signup\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n            {cookies.get(\"token\") != undefined ? (\n              <ul class=\"navbar-nav ms-auto\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/logout\">\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            ) : null}\n          </div>\n        </div>\n      </nav>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Route path=\"/addtodo\">\n          <AddTodo />\n        </Route>\n        <Route path=\"/\">\n          <ViewTodos />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\ViewTodos.js",["44","45","46"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\SignUp.js",["47","48"],"import React, { useState } from \"react\";\r\nimport { registerUser } from \"../APIFunctions\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SignUp() {\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [failureMessage, setFailureMessage] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n\r\n  if (cookies.get(\"token\") != undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    let response = await registerUser(name, email, password);\r\n    if ((await response) == \"Success\") {\r\n      setFailureMessage(\"\");\r\n      setSuccessMessage(await response);\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setFailureMessage(await response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {successMessage ? (\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      ) : null}\r\n      {failureMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {failureMessage}\r\n        </div>\r\n      ) : null}\r\n      <h2>Sign Up Page</h2>\r\n      <div class=\"form-group\">\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>\r\n          Sign Up!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Login.js",["49","50"],"import React, { useState } from \"react\";\r\nimport { loginUser } from \"../APIFunctions\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [failureMessage, setFailureMessage] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const cookies = new Cookies();\r\n  const history = useHistory();\r\n\r\n  if (cookies.get(\"token\") != undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    const res = await loginUser(email, password);\r\n    const date = new Date();\r\n    if (rememberMe) {\r\n      date.setDate(date.getDate() + 7);\r\n    } else {\r\n      date.setTime(date.getTime() + 30 * 60 * 1000);\r\n    }\r\n    if ((await res[0]) == true) {\r\n      setFailureMessage(\"\");\r\n      setSuccessMessage(\"Logged In\");\r\n      cookies.set(\"token\", res[1], { path: \"/\", expires: date });\r\n      window.location.reload();\r\n    } else {\r\n      setSuccessMessage(\"\");\r\n      setFailureMessage(await res[1]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n      {successMessage ? (\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          {successMessage}\r\n        </div>\r\n      ) : null}\r\n      {failureMessage ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {failureMessage}\r\n        </div>\r\n      ) : null}\r\n      <h2>Login Page</h2>\r\n      <div class=\"form-group\">\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"form-check-input\"\r\n            checked={rememberMe}\r\n            onChange={() => setRememberMe(!rememberMe)}\r\n          />\r\n          <label class=\"form-check-label\">Remember Me</label>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>\r\n          Login!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\AddTodo.js",["51","52","53"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\APIFunctions.js",["54","55"],"C:\\Users\\yoges\\Documents\\Projects\\mern-todo-app\\todo-frontend\\src\\components\\Logout.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":17,"column":11,"nodeType":"62","endLine":17,"endColumn":44},{"ruleId":"63","severity":1,"message":"64","line":32,"column":35,"nodeType":"65","messageId":"66","endLine":32,"endColumn":37},{"ruleId":"63","severity":1,"message":"67","line":46,"column":35,"nodeType":"65","messageId":"66","endLine":46,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":60,"column":35,"nodeType":"65","messageId":"66","endLine":60,"endColumn":37},{"ruleId":"63","severity":1,"message":"67","line":10,"column":30,"nodeType":"65","messageId":"66","endLine":10,"endColumn":32},{"ruleId":"63","severity":1,"message":"67","line":14,"column":51,"nodeType":"65","messageId":"66","endLine":14,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":23,"column":6,"nodeType":"70","endLine":23,"endColumn":8,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":28,"nodeType":"65","messageId":"66","endLine":17,"endColumn":30},{"ruleId":"63","severity":1,"message":"67","line":23,"column":26,"nodeType":"65","messageId":"66","endLine":23,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":17,"column":28,"nodeType":"65","messageId":"66","endLine":17,"endColumn":30},{"ruleId":"63","severity":1,"message":"67","line":29,"column":24,"nodeType":"65","messageId":"66","endLine":29,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":10,"column":30,"nodeType":"65","messageId":"66","endLine":10,"endColumn":32},{"ruleId":"63","severity":1,"message":"67","line":14,"column":51,"nodeType":"65","messageId":"66","endLine":14,"endColumn":53},{"ruleId":"68","severity":1,"message":"69","line":23,"column":6,"nodeType":"70","endLine":23,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":11,"nodeType":"75","messageId":"76","endLine":11,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":37,"column":11,"nodeType":"75","messageId":"76","endLine":37,"endColumn":14},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validation'. Either include it or remove the dependency array.","ArrayExpression",["79"],["80"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [validation]",{"range":"84","text":"85"},{"range":"86","text":"85"},[644,646],"[validation]",[642,644]]